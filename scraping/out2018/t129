{"Documento": "Tese de Doutorado", "Autor": "Ferraz, Rodrigo Barroca Dias (Catálogo USP)", "Nome completo": "Rodrigo Barroca Dias Ferraz", "E-mail": "rodrigo.ferraz@gmail.com", "Unidade da USP": "Escola Politécnica", "Área do Conhecimento": "Sistemas Eletrônicos", "Data de Defesa": "2018-01-15", "Imprenta": "São Paulo, 2018", "Orientador": "Lopes, Roseli de Deus (Catálogo USP)", "Banca examinadora": ["Lopes, Roseli de Deus (Presidente)", "Kofuji, Sergio Takeo", "Kopper, Regis Augusto Poli", "Kurashima, Celso Setsuo", "Sato, Liria Matsumoto"], "Título em português": "Um modelo de objetos e arquitetura para aplicações distribuí­das de realidade virtual.", "Palavras-chave em português": ["Realidade virtual", "Sistemas distribuídos"], "Resumo em português": "Técnicas e ferramentas (middlewares para desenvolvimento de aplicações distribuídas são utilizadas no caso dos recursos de um único computador não serem suficientes, ou para atender requisitos de qualidade de serviço, ou mesmo para abranger uma maior quantidade de usuários. A Realidade Virtual é uma das áreas da computação  a sua complexidade, se beneficia de tais técnicas e middlewares, seja para proporcionar ambientes mais imersivos e/ou possibilitar a interação de múltiplos usuários. A Realidade Virtual engloba uma ampla diversidade de aplicações, incluindo infraestruturas de alta imersão, jogos multi-jogadores, e simuladores de voo, e cada classe de aplicação têm demandas específicas de distribuição, como escalabilidade, ou requisitos de tempo-real, entre outros. Devido à complexidade e a essa diversidade de aplicações de realidade virtual, as alternativas de middlewares disponíveis atendem requisitos específicos de uma única classe, ou, as genéricas, não fornecem modelos de objetos, comunicação ou execução favoráveis às aplicações de realidade virtual. Esse trabalho tem o objetivo de propor um novo modelo de objetos e arquitetura de um middleware para desenvolvimento de aplicações distribuídas de realidade virtual suficientemente flexível para atender diversas classes de aplicações. O modelo de objetos proposto une os modelos publicador/assinante e requisição/ resposta em uma única entidade similar aos objetos do paradigma de programação orientada a objetos, que, além de empregar conceitos intuitivos para desenvolvedores, possibilita o desacoplamento lógico entre os processos, simplificando o projeto e a implementação das aplicações distribuídas. O principal diferencial desta abordagem é a possibilidade de distribuir a implementação de cada membro dos objetos em diferentes processos.", "Título em inglês": "An object model and architecture for distributed virtual reality applications.", "Palavras-chave em inglês": ["Communication models", "Distributed applications", "Midlleware architecture", "Object models", "Object-oriented programming", "Virtual reality"], "Resumo em inglês": "Techniques and middlewares for distributed application development are used in cases the resources available in a single computer are not enough for the demanded complexity, to meet the required quality of services, or even to cover a greater number of users. The Virtual Reality is one of the computer fields that, because of its complexity, benefits from such techniques and tools, either to provide more immersive virtual environments, or to enable multi-user interaction. The Virtual Reality covers a wide range of applications, including high immersion infrastructures, multiplayer games, and full mission flight simulators. Each application class has specifics distribution demands, such as high scalability, or real-time requirements. Because of complexity and the diversity of virtual reality applications, the distribution solutions available meet the specific requirements of a single class, or the generic ones do not provide object, communication, or execution favorable for virtual reality applications. This work proposes a new model of objects and architecture of a middleware for distributed virtual reality applications that is flexible enough to suit several classes of applications. The proposed object model joins the publisher/subscriber and request/response models to a single logic entity similar to the objects of the object-oriented programming paradigm. Besides being an intuitive concept for developers, this entity enable logical decoupling between processes, simplifying the design and implementation of distributed applications. The main feature of this approach is the possibility to distribute the implementation of each member of the objects in different processes.", "Data de Publicação": "2018-04-09", "url": "http://www.teses.usp.br/teses/disponiveis/3/3142/tde-09042018-074824/pt-br.php"}
